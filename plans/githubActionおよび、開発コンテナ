実装したいこと

- 開発コンテナの適用・worktreeで、安全に開発できるようにする
    https://docs.anthropic.com/ja/docs/claude-code/devcontainer

- GitHub で @claude を使う
    Claude Code Action 完全ガイド
    前提チェック
    項目	内容
    契約プラン	Claude MAX (200 USD/月) ― GitHub Action 手数料は込み。API トークン消費は月額枠から減算
    権限	対象リポジトリの Admin
    ローカル環境	npm install -g @anthropic-ai/claude-code で最新版 Claude CLI を導入
    認証情報	- API キー (sk-ant-… 形式)
    - OAuth トークン (claude setup-token で発行)
    
    ① 最速セットアップ（推奨）
    bash
    コピーする
    編集する
    # 1. ターミナルで Claude CLI を起動
    claude
    
    # 2. GitHub App を対話的に導入
    /install-github-app
    完了すると GitHub App がリポジトリへ自動インストールされ、Secrets にトークンが保存される
    
    Issue／PR コメントに @claude と書くだけで Action が起動
    
    Bedrock / Vertex AI 経由の場合はこのコマンドは使えず、手動手順へ
    
    ② 手動セットアップ（細かく制御したい場合）
    手順	操作
    1. GitHub App インストール	https://github.com/apps/claude → Install → 対象リポジトリを選択
    2. Secrets 追加	Settings → Secrets and variables → Actions で ANTHROPIC_API_KEY または CLAUDE_CODE_OAUTH_TOKEN を登録
    3. ワークフロー作成	.github/workflows/claude.yml を新規追加し、以下を貼り付け
    
    yaml
    コピーする
    編集する
    name: Claude Assistant
    on:
      issue_comment:                { types: [created] }
      pull_request_review_comment:  { types: [created] }
      issues:                       { types: [opened, assigned] }
    
    jobs:
      claude-response:
        runs-on: ubuntu-latest
        steps:
          - uses: anthropics/claude-code-action@beta
            with:
              # ↓いずれか一方を指定
              anthropic_api_key:     ${{ secrets.ANTHROPIC_API_KEY }}
              # claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
              github_token:          ${{ secrets.GITHUB_TOKEN }}
              # trigger_phrase の既定値は @claude
    使い方サンプル
    シーン	コメント例	Claude の動き
    機能実装	@claude implement this feature based on the issue description	Issue を解析し PR を自動生成
    バグ修正	@claude fix the TypeError in the user dashboard component	バグ箇所を特定し修正 PR を作成
    コードレビュー	@claude please review this PR and suggest improvements	変更点をレビューし改善提案
    
    運用ベストプラクティス
    CLAUDE.md をリポジトリ直下に置き、コード規約・レビュー方針・NG パターンを記載すると出力品質が安定
    
    トークンは 必ず GitHub Secrets で管理し、ワークフローにハードコードしない
    
    trigger_phrase, max_turns, timeout_minutes などはワークフロー with: オプションでカスタマイズ
    
    コスト管理
    
    GitHub Actions ランナー時間は GitHub 側の課金対象
    
    Claude のトークン消費は MAX プランの月額枠 に含まれ、超過分は従量課金
    
    よくあるトラブル & チェックポイント
    症状	確認事項
    @claude に反応しない	App インストール範囲、Secrets 名、@claude の前後スペースを確認
    CI が Claude コミットをトリガーしない	permissions に contents, pull-requests, issues が含まれているか
    認証エラー	トークン権限と有効期限を確認し、必要に応じて再生成
    
    まとめ
    Claude MAX プラン利用者は追加料金なしで Claude Code Action をフル活用できます。
    まずは Quick Setup で動作を確認し、運用に合わせてワークフローや CLAUDE.md を調整していくのが最短ルートです。